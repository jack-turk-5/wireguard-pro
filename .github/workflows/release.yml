name: Release and Publish Image

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  # The static, full name of the image.
  IMAGE_NAME: ghcr.io/jack-turk-5/wireguard/wiregaurd-pro

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build image using Makefile
        # This is expected to create a local image named 'wireguard-pro:latest'
        run: make image

      - name: Re-tag image for release, latest, and SHA
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          SHA_TAG=${{ steps.vars.outputs.sha_short }}
          
          # Re-tag the local build with the full registry path for all desired tags
          podman tag localhost/wireguard-pro:latest "${{ env.IMAGE_NAME }}:${RELEASE_VERSION}"
          podman tag localhost/wireguard-pro:latest "${{ env.IMAGE_NAME }}:latest"
          podman tag localhost/wireguard-pro:latest "${{ env.IMAGE_NAME }}:${SHA_TAG}"

      - name: Push images to GHCR
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          SHA_TAG=${{ steps.vars.outputs.sha_short }}

          # Push all three tags
          podman push "${{ env.IMAGE_NAME }}:${RELEASE_VERSION}"
          podman push "${{ env.IMAGE_NAME }}:latest"
          podman push "${{ env.IMAGE_NAME }}:${SHA_TAG}"
